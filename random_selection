#!/usr/bin/python
#coding: utf-8
import sys,argparse,random
parser = argparse.ArgumentParser(description='Return random selection of lines if duplicate in col',epilog='Author: Gildas Lepennetier: gildas.lepennetier@hotmail.fr')
parser.add_argument('-in',required=False,type=argparse.FileType('r'),default=sys.stdin, help='Input file - any tab-separated file containing duplicats in a column')
parser.add_argument('-out',required=False,type=argparse.FileType('w'),default=sys.stdout, help='Output file')
parser.add_argument('-col',type=int,required=True,help='Column number for the selection')
parser.add_argument('-header',default=False,action='store_true',help='If you have an header')
parser.add_argument('-sorted',default=False,action='store_true',help='Sort the output')
parser.add_argument('-excludeSingle',default=False,action='store_true',help='In case of single element, should we pick it or exclude it? No random possible.')
parser.add_argument('-sep',type=str,default='\t',required=False,help='Separator (default: \\t)')
parser.add_argument('-endline',type=str,default='\n',required=False,help='End of the line (default: unix \\n)')
parser.add_argument('--version',action='version', version='%(prog)s 30-04-2014')#version display
parser.add_argument('--verbose','-v',action='count',default=0,help='Verbosity')# count the level of verbosity, +1 for each -v flag
parser.add_argument('--copy',action='store_true',help='Display Copyright informations')
parser.add_argument('--author',action='store_true',help='Display author informations')
args=vars(parser.parse_args())
if args['author']:
    print ("LEPENNETIER Gildas - gildas.lepennetier@hotmail.fr")
    exit()
if args['copy']:
    print ("Copyright 2014 LEPENNETIER Gildas")
    exit()
VERB_LVL=args['verbose']
IN=args['in']
OUT=args['out']
sep=args['sep']
SkipFirst=args['header']
col=args['col']-1
Lines = IN.readlines()
if SkipFirst:
    OUT.write(  Lines[0]  )
    Lines=Lines[1:]
if (col+1) > len(Lines[0].split(sep)) :
    print("ERROR: bad index for the column to use (required: %s / number: %s)"%(col+1,len(Lines[0].split(sep))))
    exit()
DICO={}
for line in Lines:
    line=line.split(args['endline'])[0]
    KEY=line.split(sep)[col]
    if KEY not in DICO:
        DICO[KEY]=[line]
    else:
        DICO[KEY].append(line)
if args['sorted']:
    KEYS=sorted(DICO.keys())
else:
    KEYS=DICO.keys()
for K in KEYS:
    if len(DICO[K]) > 1: #if more than 1 element, choose one randomly
        OUT.write(random.choice(DICO[K]) + args['endline'])
    else:
        if ! args['excludeSingle']:#if not exclusion of single elements (in this case no random possible)
            OUT.write(DICO[K][0] + args['endline'])

#!/bin/bash
#coding: utf-8
#================================================
# default values
VERSION="1.0"
AUTHOR="Author: Gildas Lepennetier - gildas.lepennetier@hotmail.fr"
COPY="Copyright 2015 LEPENNETIER Gildas"
CREATION="23 Feb 2015"

OUT="$HOME"
file_name="ip.update"
server_get="http://gildas.idi-informatique.fr/ip.php"
server_port="22"

#================================================
# functions
getip(){ echo $(wget $server_get -q -O - | grep -Po '((25[0-5]|2[0-4][0-9]|[01]?[1-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9][0-9]?)'); }

usage()
{
cat << EOF
usage: $(basename $0) [jfodrp] [h]

DESCRIPTION
	
	Print your current IP, as displayed in a website in a file.
	Under development: copy of this file in a distant computer,
	or update of a database of ip.
	
	Default server that display your ip: 
		$server_get
	Default file place and name: 
		$OUT/$file_name

ARGUMENTS:
	
	-h Display help and quit
	
	-j Just print the ip and exit

	-f To give an alternative storage file name	(default: $file_name)
	
		The IP will be printed in this file. You can then check inside by yourself, 
		or send this file somewhere using the -r option. OVERWRITE if file exists.
	
	-o Place where to print the file (default: $OUT)
		
		The default behavior is to create the file in the HOME.
	
	-d Database name	(example: ip.db)
	
		Add the IP in an existing file, it will also remove the duplicates.
	
	-r Remote sever
		
		Send the 'Storage file' in a remote computer.
		Specify also the place you want to copy the file to. 
		example for home: login@server:~/
	
	-p Port	(default: $server_port)
		
		You probably want to specify a port to access the remote computer

	
	-----------------------
	$AUTHOR
	Version $VERSION - Creation $CREATION
	$COPY

EOF
}
if [ $# -eq 0 ];then usage; exit 1; fi
#================================================
# arguments handler
while getopts "hjo:f:d:r:p:" option; do
	#echo "getopts a trouvé l'option $option"
	case $option in
		h)
			#echo "Exécution des commandes de l'option 'h' "
			#echo "Liste des arguments à traiter : $OPTARG"
			#echo "Indice de la prochaine option à traiter : $OPTIND"
			usage && exit 0
			;;
		j)
			echo $(getip) && exit 0
			;;
		o)
			OUT="$OPTARG"
			;;			
		f)
			file_name="$OPTARG"
			;;
		d)
			file_db="$OPTARG"
			echo $(getip) >> "$OUT/$file_db"
			cat "$OUT/$file_db" | sort | uniq > "$OUT/$file_db.tmp" && mv "$OUT/$file_db.tmp" "$OUT/$file_db" && exit 0
			;;
		r)
			server_cp="$OPTARG"
			;;
		p)
			server_port="$OPTARG"
			;;
	esac
done
echo $(getip) > "$OUT/$file_name"
if [ ! -z "$var" ]; then
	scp -P "$server_port" "$OUT/$file_name" "$server_cp"
fi

#!/usr/bin/python3
import sys,os,datetime,argparse
parser = argparse.ArgumentParser(description='Check the order of the elements in a column. Return 0 if the order is conserved, and 1 if it is disrupted',epilog='Author: Gildas Lepennetier: gildas.lepennetier@hotmail.fr')
parser.add_argument('-in',required=False,type=argparse.FileType('r'),help='input file')
parser.add_argument('-out',required=False,type=argparse.FileType('w'),default=sys.stdout, help='output file')
parser.add_argument('-sep',type=str,default='\t',required=False,help='separator (default: \\t )')
parser.add_argument('-col',type=int,required=True,help='index of the column')
parser.add_argument('-header',action='store_true',default=False,help='add this flag if you have an header')
parser.add_argument('-endline',type=str,default='\n',required=False,help='separator (default: unix \\n)')
parser.add_argument('--version', action='version', version='%(prog)s 04-30-2014')#version display
parser.add_argument('--verbose', '-v', action='count',default=0,help='add flag(s) to increase verbosity. 1: print time 2:print each step')# count the level of verbosity, +1 for each -v flag
parser.add_argument('--copy',action='store_true',help='Display Copyright informations')
parser.add_argument('--author',action='store_true',help='Display author informations')
args=vars(parser.parse_args())
if args['author']:
    print ("LEPENNETIER Gildas - gildas.lepennetier@hotmail.fr")
    exit()
if args['copy']:
    print ("Copyright 2014 LEPENNETIER Gildas")
    exit()
VERB_LVL=args['verbose']
OUT=args['out']
sep=args['sep']
COL=args['col']-1 #-1 because of python's list index start at 0
if VERB_LVL > 0:
    now=datetime.datetime.now() #now.year,now.month,now.day,now.hour,now.minute,now.microsecond
    print ("Start: %s"%(now.strftime("%Y-%m-%d %H:%M:%S")))
LINES=args['in'].readlines()
#skip the first line
if args['header']:
    LINES=LINES[1:]
colnb=len(LINES[0].split(args['endline'])[0].split(sep))
if colnb < COL:
    print("Error: index out of range, check your column index/separator")
    exit()
MOTIF=[]
lineNumber=0
#find the motif : add element in list untile we find the same element
for rline in LINES:
    lineNumber+=1
    ELEM=rline.split(args['endline'])[0].split(sep)[COL]
    if ELEM not in MOTIF:
        MOTIF.append(ELEM)
    else:
        break
motifSize=len(MOTIF)
if VERB_LVL > 1:
    print("motif on %s lines"%motifSize)
    print(MOTIF)
#check the motif in all the file
lineNumber=0
for rline in LINES: #LINES[motifSize:]
    lineNumber+=1
    ELEM=rline.split(args['endline'])[0].split(sep)[COL]
    Position=lineNumber % motifSize -1 #-1 because of python list !
    if ELEM != MOTIF[Position]:
        print("Error line %s : order disrupted"%(lineNumber))
        exit(1)
#last line check
if ELEM != MOTIF[-1]:
    print("Error line %s : order disrupted, last line => motif truncated"%(lineNumber))
    exit(1)
if VERB_LVL > 0:
    now=datetime.datetime.now() #now.year,now.month,now.day,now.hour,now.minute,now.microsecond
    print ("End: %s"%(now.strftime("%Y-%m-%d %H:%M:%S")))

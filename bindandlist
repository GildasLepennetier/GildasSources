#!/usr/bin/python3
import sys,os,datetime,argparse
exemple="""
From a file

FBgn0000008	FA_02
FBgn0000008	FA_01
FBgn0000008	FA_02
FBgn0000009	FA_02

-> you will obtain ->

id              element;
FBgn0000008     FA_02;FA_01
FBgn0000009	FA_02

(here, sep2 is ';')
"""
parser = argparse.ArgumentParser(description='Bin depending on a column ("-gatherColIndex") and extract a list of elements on one other column ("-binColIndex"). This function is order-preserving.',epilog='Author: Gildas Lepennetier: gildas.lepennetier@hotmail.fr')
#INPUT AND OUTPUT
parser.add_argument('-in',  required=False, type=argparse.FileType('r'),help='input file name - default stdin')
parser.add_argument('-out', required=False, type=argparse.FileType('w'),default=sys.stdout, help='output file name - default stdout')
parser.add_argument('-sep', type=str,default='\t',required=False,help='separator of the input file (default: \\t )')
parser.add_argument('-sep2',type=str,default=',',required=False,help='separator for the bins (default: , )')
parser.add_argument('--version', action='version', version='%(prog)s 26 Sep 2014')#version display
parser.add_argument('--verbose', '-v', action='count',default=0,help='add flag(s) to increase verbosity.')
parser.add_argument('-header', action='store_true',default=False,help='add this flag if you have an header')
parser.add_argument('-gatherColIndex',type=int,default=1,required=False,help='index of the id column (uniq applied) (default: 1)')
parser.add_argument('-binColIndex',type=int,default=2,required=False,help='index of the column to count (default: 2)')
parser.add_argument('-exemple', action='store_true',default=False,help='Do you want an exemple?')
parser.add_argument('--copy',action='store_true',help='Display Copyright informations')
parser.add_argument('--author',action='store_true',help='Display author informations')
args=vars(parser.parse_args())
if args['author']:
    print ("LEPENNETIER Gildas - gildas.lepennetier@hotmail.fr")
    exit()
if args['copy']:
    print ("Copyright 2014 LEPENNETIER Gildas")
    exit()
VERB_LVL=args['verbose']
sep=args['sep']
sep2=args['sep2']
gatherColIndex=args['gatherColIndex']-1 #-1 because of python's list index start at 0
binColIndex=args['binColIndex']-1
if args['exemple']:
    print (exemple)
    exit()
if VERB_LVL > 0:
    now=datetime.datetime.now() #now.year,now.month,now.day,now.hour,now.minute,now.microsecond
    print ("Start: %s"%(now.strftime("%Y-%m-%d %H:%M:%S")))
#### count the occurences
try:
    LINES=args['in'].readlines()
except AttributeError:
    print ("Error: you need to give an input!")
    exit()
#skip the first line
if args['header']:
    LINES=LINES[1:]
colnb=len(LINES[0].strip().split(sep))
if colnb < gatherColIndex or colnb < binColIndex:
    print("Error: index out of range, check your column index/separator")
    exit()
DICO={}
for rawline in LINES:
    line=rawline.strip().split(sep)
    ID=line[gatherColIndex]
    ELEM=line[binColIndex]
    if ID in DICO.keys():
        DICO[ID].append(ELEM)
    else:
        DICO[ID]=[ELEM]
args['out'].write(sep.join(["id","elements"])+"\n" )
IDs=sorted(DICO.keys())
for ID in IDs:
    #ELEMs=sorted(DICO[ID])# non-order-preserving
    ELEMs=DICO[ID]
    args['out'].write(sep.join( [ el for el in [ ID, sep2.join ([el for el in ELEMs]) ]])+"\n")
if VERB_LVL > 0:
    now=datetime.datetime.now() #now.year,now.month,now.day,now.hour,now.minute,now.microsecond
    print ("End: %s"%(now.strftime("%Y-%m-%d %H:%M:%S")))
